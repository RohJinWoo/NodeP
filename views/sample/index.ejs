<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <script src="../js/axios.min.js"></script>
</head>
<body>
  <h1>sample page: <%= title %></h1>
  <form id="form" action="">
    이름 : <input type="text" id="name" name="name">
    <button type="button" id="insert">데이터베이스 값 넣기</button>
    <button type="button" id="selectAll">데이터베이스 값 전체 보기 (get)</button>
    <button type="button" id="selectAllAjax">데이터베이스 값 전체 보기 (ajax/post)</button>
    <button type="button" id="selectOneId">데이터베이스 값 pid로 찾기 (ajax/post)</button>
    <button type="button" id="selectOne">데이터베이스 값 찾기 (ajax/post)</button>
  </form>

  <div id="output">
    <% for(let i = 0, len = sql.length; i < len; i++){ %>
      <h2><%= sql[i].s_name %></h2>
    <% } %>
  </div>

</body>
<script src="../javascripts/util.js"></script>
<script type="text/javascript">
  let name = u.qu('#name'),
      insert = u.qu('#insert'),
      selectAll = u.qu('#selectAll'),
      selectAllAjax = u.qu('#selectAllAjax'),
      selectOneId = u.qu('#selectOneId'),
      selectOne = u.qu('#selectOne');
  
  /* 
  form: function(form, path, method){
    form.action = path
    form.method = method
    form.submit()
  }, */
  insert.addEventListener('click', function(){
    u.form(u.qu('#form'), '/sample/insert', 'post')
  },false);

  selectAll.addEventListener('click', function(){
    // u.form(u.qu('#form'), '/sample/selectall', 'get');
    u.link('/sample/selectall');
  },false);

  selectAllAjax.addEventListener('click', function(){
    axios.post('/sample/selectall', {})
    .then(function(response){
      console.log(response);
      let output = u.qu('#output');
      u.childAllRemove('#output');
      for(let i = 0, len = response.data.length; i<len; i++){
        output.appendChild(u.node(`<h3 style="color:green";>${response.data[i].s_name}</h3>`));
      }
    })
    .catch(function(response){
      console.log('error response');
    });
    /* 
    ajax를 사용해서 데이터를 받는것이다. 컨트롤러로 요청을 보내고 처리가되면 then에서 response를 받고 해당 데이터로 돔에서 노드를 만들어
    output 노드에 붙여준다. 에러가 났을 경우 catch부분에서 처리한다.
    ajax로 xhr 객체를 만들어서 처리를 하거나 jquery의 $ajax 함수로 처리를 하는데 jquery를 사용하고 싶다면 
    jquery는 사용하지 않는 것을 모두 포함하니 ajax만 사용하려면 따로 추출해야한다. 인기있는 라이브러리인 axios를 사용한다.
    npm i -S axios 명령어를 통해 다운로드하고 bootstrap 사용처럼 node에서 사용하기 위해서는 app.js에 사용할 수 있게 코드를 추가한다.
    app.use('/js', express.static(path.join(__dirname, 'node_modules', 'axios', 'dist')));
    */
    
  },false);

  selectOneId.addEventListener('click', function(){
    let name = u.qu('#name').value;
    axios.post('/sample/selectOneId',{id: name})
    .then((response) => {
      console.log(response);
      let output = u.qu('#output');
      u.childAllRemove('#output');
      output.appendChild(u.node(`<h3 style="color:blue";>${response.data !== "" ? response.data.s_name: '값이 없습니다.'}</h3>`));
    })
    .catch(function(response){
      console.log('error response');
    });
  });

  selectOne.addEventListener('click', function(){
    let name = u.qu('#name').value;
    axios.post('/sample/selectOne',{s_name: name})
    .then((response) => {
      console.log(response);
      let output = u.qu('#output');
      u.childAllRemove('#output');
      output.appendChild(u.node(`<h3 style="color:blue";>${response.data !== "" ? response.data.s_name: '값이 없습니다.'}</h3>`));
    })
    .catch(function(response){
      console.log('error response');
    });
  })

  /* 
  post로 ajax 시도시 데이터를 같이 보내고 성공시 then에서 처리한다. 백틱 `을 사용하면 'text' + value + 'text' 이러한 문법을 위와 같이 좀 더 편하게 사용이 가능하다.
  */

</script>
</html>